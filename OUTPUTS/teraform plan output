Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with
the following symbols:
  + create

Terraform will perform the following actions:

  # module.appservice.azurerm_app_service.test will be created
  + resource "azurerm_app_service" "test" {
      + app_service_plan_id               = (known after apply)
      + app_settings                      = {
          + "WEBSITE_RUN_FROM_PACKAGE" = "0"
        }
      + client_affinity_enabled           = false
      + client_cert_enabled               = false
      + custom_domain_verification_id     = (known after apply)
      + default_site_hostname             = (known after apply)
      + enabled                           = true
      + https_only                        = false
      + id                                = (known after apply)
      + key_vault_reference_identity_id   = (known after apply)
      + location                          = "eastus"
      + name                              = "myApplicationUdacityDemoPkesar-AppService"
      + outbound_ip_address_list          = (known after apply)
      + outbound_ip_addresses             = (known after apply)
      + possible_outbound_ip_address_list = (known after apply)
      + possible_outbound_ip_addresses    = (known after apply)
      + resource_group_name               = "rg"
      + site_credential                   = (known after apply)

      + auth_settings {
          + additional_login_params        = (known after apply)
          + allowed_external_redirect_urls = (known after apply)
          + default_provider               = (known after apply)
          + enabled                        = (known after apply)
          + issuer                         = (known after apply)
          + runtime_version                = (known after apply)
          + token_refresh_extension_hours  = (known after apply)
          + token_store_enabled            = (known after apply)
          + unauthenticated_client_action  = (known after apply)

          + active_directory {
              + allowed_audiences = (known after apply)
              + client_id         = (known after apply)
              + client_secret     = (sensitive value)
            }

          + facebook {
              + app_id       = (known after apply)
              + app_secret   = (sensitive value)
              + oauth_scopes = (known after apply)
            }

          + google {
              + client_id     = (known after apply)
              + client_secret = (sensitive value)
              + oauth_scopes  = (known after apply)
            }

          + microsoft {
              + client_id     = (known after apply)
              + client_secret = (sensitive value)
              + oauth_scopes  = (known after apply)
            }

          + twitter {
              + consumer_key    = (known after apply)
              + consumer_secret = (sensitive value)
            }
        }

      + connection_string {
          + name  = (known after apply)
          + type  = (known after apply)
          + value = (sensitive value)
        }

      + identity {
          + identity_ids = (known after apply)
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = (known after apply)
        }

      + logs {
          + detailed_error_messages_enabled = (known after apply)
          + failed_request_tracing_enabled  = (known after apply)

          + application_logs {
              + file_system_level = (known after apply)

              + azure_blob_storage {
                  + level             = (known after apply)
                  + retention_in_days = (known after apply)
                  + sas_url           = (sensitive value)
                }
            }

          + http_logs {
              + azure_blob_storage {
                  + retention_in_days = (known after apply)
                  + sas_url           = (sensitive value)
                }

              + file_system {
                  + retention_in_days = (known after apply)
                  + retention_in_mb   = (known after apply)
                }
            }
        }

      + site_config {
          + acr_use_managed_identity_credentials = (known after apply)
          + acr_user_managed_identity_client_id  = (known after apply)
          + always_on                            = (known after apply)
          + app_command_line                     = (known after apply)
          + auto_swap_slot_name                  = (known after apply)
          + default_documents                    = (known after apply)
          + dotnet_framework_version             = (known after apply)
          + ftps_state                           = (known after apply)
          + health_check_path                    = (known after apply)
          + http2_enabled                        = (known after apply)
          + ip_restriction                       = (known after apply)
          + java_container                       = (known after apply)
          + java_container_version               = (known after apply)
          + java_version                         = (known after apply)
          + linux_fx_version                     = (known after apply)
          + local_mysql_enabled                  = (known after apply)
          + managed_pipeline_mode                = (known after apply)
          + min_tls_version                      = (known after apply)
          + number_of_workers                    = (known after apply)
          + php_version                          = (known after apply)
          + python_version                       = (known after apply)
          + remote_debugging_enabled             = (known after apply)
          + remote_debugging_version             = (known after apply)
          + scm_ip_restriction                   = (known after apply)
          + scm_type                             = (known after apply)
          + scm_use_main_ip_restriction          = (known after apply)
          + use_32_bit_worker_process            = (known after apply)
          + vnet_route_all_enabled               = (known after apply)
          + websockets_enabled                   = (known after apply)
          + windows_fx_version                   = (known after apply)

          + cors {
              + allowed_origins     = (known after apply)
              + support_credentials = (known after apply)
            }
        }

      + source_control {
          + branch             = (known after apply)
          + manual_integration = (known after apply)
          + repo_url           = (known after apply)
          + rollback_enabled   = (known after apply)
          + use_mercurial      = (known after apply)
        }

      + storage_account {
          + access_key   = (sensitive value)
          + account_name = (known after apply)
          + mount_path   = (known after apply)
          + name         = (known after apply)
          + share_name   = (known after apply)
          + type         = (known after apply)
        }
    }

  # module.appservice.azurerm_app_service_plan.test will be created
  + resource "azurerm_app_service_plan" "test" {
      + id                           = (known after apply)
      + kind                         = "Windows"
      + location                     = "eastus"
      + maximum_elastic_worker_count = (known after apply)
      + maximum_number_of_workers    = (known after apply)
      + name                         = "myApplicationUdacityDemoPkesar-AppService"
      + resource_group_name          = "rg"

      + sku {
          + capacity = (known after apply)
          + size     = "F1"
          + tier     = "Free"
        }
    }

  # module.network.azurerm_subnet.test will be created
  + resource "azurerm_subnet" "test" {
      + address_prefix                                 = "10.5.1.0/24"
      + address_prefixes                               = (known after apply)
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "myApplicationUdacityDemoPkesar-NET-sub"
      + resource_group_name                            = "rg"
      + virtual_network_name                           = "myApplicationUdacityDemoPkesar-NET"
    }

  # module.network.azurerm_virtual_network.test will be created
  + resource "azurerm_virtual_network" "test" {
      + address_space         = [
          + "10.5.0.0/16",
        ]
      + dns_servers           = (known after apply)
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "eastus"
      + name                  = "myApplicationUdacityDemoPkesar-NET"
      + resource_group_name   = "rg"
      + subnet                = (known after apply)
      + vm_protection_enabled = false
    }

  # module.nsg-test.azurerm_network_security_group.nsg will be created
  + resource "azurerm_network_security_group" "nsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myApplicationUdacityDemoPkesar-NSG"
      + resource_group_name = "rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "5000"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "myApplicationUdacityDemoPkesar-NSG-5000"
              + priority                                   = 100
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "10.5.1.0/24"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # module.nsg-test.azurerm_subnet_network_security_group_association.test will be created
  + resource "azurerm_subnet_network_security_group_association" "test" {
      + id                        = (known after apply)
      + network_security_group_id = (known after apply)
      + subnet_id                 = (known after apply)
    }

  # module.publicip.azurerm_public_ip.test will be created
  + resource "azurerm_public_ip" "test" {
      + allocation_method       = "Dynamic"
      + availability_zone       = (known after apply)
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "myApplicationUdacityDemoPkesar-publicip-pubip"
      + resource_group_name     = "rg"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + zones                   = (known after apply)
    }

  # module.resource_group.azurerm_resource_group.test will be created
  + resource "azurerm_resource_group" "test" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "rg"
    }

Plan: 8 to add, 0 to change, 0 to destroy.
╷
